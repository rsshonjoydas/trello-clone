generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Board {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  orgId         String
  title         String
  imageId       String
  imageThumbUrl String
  imageFullUrl  String
  imageUserName String
  imageLinkHTML String

  lists         List[]

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model List {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  order         Int

  boardId       String      @db.ObjectId
  board         Board       @relation(fields: [boardId], references: [id], onDelete: Cascade)

  cards         Card[]

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([boardId])
}

model Card {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  order         Int
  description   String?

  listId        String      @db.ObjectId
  list          List       @relation(fields: [listId], references: [id], onDelete: Cascade)

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([listId])
}

enum ACTION {
  CREATE
  UPDATE
  DELETE
}

enum ENTITY_TYPE {
  BOARD
  LIST
  CARD
}

model AuditLog {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  orgId         String
  action        ACTION
  entityId      String
  entityType    ENTITY_TYPE
  entityTitle   String
  userId        String
  userName      String
  userImage     String

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}